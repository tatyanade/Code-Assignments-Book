/*** example shows how to parse a raw JSON string to a javascript object.* no idea what JSON is? then have a read here: http://en.wikipedia.org/wiki/JSON*/#includepath "~/Documents/;%USERPROFILE%Documents";#include "basiljs/bundle/basil.js";// to load an external json file usevar jsonString = b.loadString("data.json");//PAGESvar pages=26; //how many pages? Pages in addition to the 1 the template.var assStartPage =3; //start assignments on what page?var titleFrame, varFrame, desFrame, bFrame, metaFrame, makeFrame, aspFrame;//FORMATTING VARIABLESvar colSpacing=20;var colWidth= (576-2*colSpacing)/3;//IMAGE LAYOUTS/*default_fullpage_666x522.jpgdefault_onethird_282x136.jpgdefault_quarter_282x210.jpgdefault_shorthalf_576x210.jpgdefault_tallhalf_282x432.jpgdefault_twothirds_282x284.jpg*/var wfull = 666;var hfull = 522;var wquar = 282;var hquar = 210;var wtall = wquar;var htall = 432;var wshor = 576;var hshor = hquar;var wthr1 = wquar;var hthr1 = 136;var wthr2 = wquar;var hthr2 = 284;var Ax = 684;var Cx = Ax;var Ex = Ax;var Gx = Ax;var Bx = 978;var Dx = Bx;var Fx = Bx;var Hx = Bx;var xfull = 639;var Ay = 36;var By = Ay;var Cy = 184;var Dy = Cy;var Ey = 258;var Fy = Ey;var Gy = 332;var Hy = Gy;var yfull = -9;var imageLayouts = [  [    [xfull, yfull, wfull, hfull]  ],  [    [Ax, Ay, wquar, hquar],    [Ex, Ey, wquar, hquar],    [Bx, By, wquar, hquar],    [Fx, Fy, wquar, hquar]  ],  [    [Ax, Ay, wquar, hquar],    [Ex, Ey, wquar, hquar],    [Bx, By, wtall, htall]  ],  [    [Ax, Ay, wtall, htall],    [Bx, By, wquar, hquar],    [Fx, Fy, wquar, hquar]  ],  [    [Ax, Ay, wtall, htall],    [Bx, By, wtall, htall]  ],  [    [Ax, Ay, wquar, hquar],    [Bx, By, wquar, hquar],    [Ex, Ey, wshor, hshor]  ],  [    [Ax, Ay, wshor, hshor],    [Ex, Ey, wquar, hquar],    [Fx, Fy, wquar, hquar]  ],  [    [Ax, Ay, wshor, hshor],    [Ex, Ey, wshor, hshor]  ],  [    [Ax, Ay, wthr1, hthr1],    [Cx, Cy, wthr1, hthr1],    [Gx, Gy, wthr1, hthr1],    [Bx, By, wthr1, hthr1],    [Dx, Dy, wthr1, hthr1],    [Hx, Hy, wthr1, hthr1]  ],  [    [Ax, Ay, wthr1, hthr1],    [Cx, Cy, wthr2, hthr2],    [Bx, By, wthr2, hthr2],    [Hx, Hy, wthr1, hthr1]  ],  [    [Ax, Ay, wthr2, hthr2],    [Gx, Gy, wthr1, hthr1],    [Bx, By, wthr1, hthr1],    [Dx, Dy, wthr2, hthr2]  ],  [    [Ax, Ay, wtall, htall],    [Bx, By, wthr1, hthr1],    [Dx, Dy, wthr1, hthr1],    [Hx, Hy, wthr1, hthr1]  ],  [    [Ax, Ay, wthr1, hthr1],    [Cx, Cy, wthr1, hthr1],    [Gx, Gy, wthr1, hthr1],    [Bx, By, wtall, htall]  ],  [    [Ax, Ay, wtall, htall],    [Bx, By, wthr1, hthr1],    [Dx, Dy, wthr2, hthr2]  ],  [    [Ax, Ay, wtall, htall],    [Bx, By, wthr2, hthr2],    [Hx, Hy, wthr1, hthr1]  ],  [    [Ax, Ay, wthr1, hthr1],    [Cx, Cy, wthr2, hthr2],    [Bx, By, wtall, htall]  ],  [    [Ax, Ay, wthr2, hthr2],    [Gx, Gy, wthr1, hthr1],    [Bx, By, wtall, htall]  ],  [    [Ax, Ay, wthr2, hthr2],    [Gx, Gy, wthr1, hthr1],    [Bx, By, wthr1, hthr1],    [Dx, Dy, wthr1, hthr1],    [Hx, Hy, wthr1, hthr1]  ],  [    [Ax, Ay, wthr1, hthr1],    [Cx, Cy, wthr1, hthr1],    [Gx, Gy, wthr1, hthr1],    [Bx, By, wthr2, hthr2],    [Hx, Hy, wthr1, hthr1]  ],  [    [Ax, Ay, wthr1, hthr1],    [Cx, Cy, wthr1, hthr1],    [Gx, Gy, wthr1, hthr1],    [Bx, By, wquar, hquar],    [Fx, Fy, wquar, hquar]  ],  [    [Ax, Ay, wquar, hquar],    [Ex, Ey, wquar, hquar],    [Bx, By, wthr1, hthr1],    [Dx, Dy, wthr1, hthr1],    [Hx, Hy, wthr1, hthr1]  ],  [    [Ax, Ay, wthr1, hthr1],    [Cx, Cy, wthr2, hthr2],    [Bx, By, wquar, hquar],    [Fx, Fy, wquar, hquar]  ],  [    [Ax, Ay, wquar, hquar],    [Ex, Ey, wquar, hquar],    [Bx, By, wthr1, hthr1],    [Dx, Dy, wthr2, hthr2]  ],  [    [Ax, Ay, wthr2, hthr2],    [Gx, Gy, wthr1, hthr1],    [Bx, By, wquar, hquar],    [Fx, Fy, wquar, hquar]  ],  [    [Ax, Ay, wquar, hquar],    [Ex, Ey, wquar, hquar],    [Bx, By, wthr2, hthr2],    [Hx, Hy, wthr1, hthr1]  ],];//var selected = 1;var defaultImg;var imageArray =[];// function keyPressed() {//   if (keyCode == LEFT_ARROW) {//     selected--;//   } else if (keyCode == RIGHT_ARROW) {//     selected++;//   }//   selected = constrain(selected, 0, imageLayouts.length-1);//   return false; // prevent default// }// function setup(){//   //defaultImg = loadImage("default.jpg");//   imagesString = jsonData[i].image;//   var imagesA=imagesString.split(" ");////   if(imagesA[i] ===''){//   imagesA[i]='default_fullpage_666x522.jpg';// }//   imageArray = new Array(imagesA[0], imagesA[1], imagesA[2], imagesA[3], imagesA[4], imagesA[5]);//// }function draw() {  b.textFont("Atlas Grotesk","Regular"); // set default font  // parse JSON  var jsonData = b.JSON.decode( jsonString );  //images  imageArray = new Array(5);  for(var j =0; j<imageArray.length;j++){    imageArray[j]="default_fullpage_666x522.jpg";    b.println(imageArray[j]);  }  //  imageArray = new Array(imagesA[0], imagesA[1], imagesA[2], imagesA[3], imagesA[4], imagesA[5]);  var jLength = objLength(jsonData);  //to auto generate doc length based on json  //pages = assStartPage + (jLength*4)-1;  // add new pages  for (var i = 1; i < pages; i++) {    b.addPage();  };  //==========================================================  //Assignment title page  for (var i = 0; i < Math.floor(((pages+1)-assStartPage)/4); i++) {    b.page((i*4)+assStartPage);    assTitle1(jsonData[i].titles, 36, 441);  };  //==========================================================  //Assignment brief page  for (var i = 0; i < Math.floor(((pages+1)-assStartPage)/4); i++) {    b.page(((i)*4)+1+assStartPage);    //TITLE    assTitle2(jsonData[i].titles, 36, 36);    //DESCRIPTION    assDescription(jsonData[i].shortdescription);    //BRIEF    assBrief(jsonData[i].brief);    //META DATA    b.textSize(7);    b.textLeading(9);    b.textAlign(Justification.LEFT_ALIGN, VerticalJustification.CENTER_ALIGN);    assMeta(jsonData[i].level,jsonData[i].tagsstem, jsonData[i].tagsarts, jsonData[i].learningobjectives);    //VARIATIONS    assVariations(jsonData[i].variations);    //b.linkTextFrames(bFrame, vFrame);    //MAKING IT meaningful    assMeaningful(jsonData[i].makingitmeaningful);    b.linkTextFrames(vFrame,makeFrame);  };  b.textSize(7);  b.textLeading(9);  b.textAlign(Justification.LEFT_ALIGN, VerticalJustification.CENTER_ALIGN);  // for (var i = 0; i < Math.floor(((pages+1)-assStartPage)/4); i++) {  //   b.page(((i)*4)+1+assStartPage);  //   assMeta(jsonData[i].level,jsonData[i].tagsstem, jsonData[i].tagsarts, jsonData[i].learningobjectives);  // };  //==========================================================  //Assignment image pages  for (var i = 0; i < Math.floor(((pages+1)-assStartPage)/4); i++) {    b.page((i)*4+2+assStartPage);    //defaultImg = loadImage("default.jpg");    var imagesString = jsonData[i].image;    //b.println("imagesSting:"+imagesString);    if (imagesString != null){      var stringArray= b.split(imagesString,"\n");      for(var n=0;n<stringArray.length;n++){        b.println("imagesString:"+stringArray[n]);        imageArray[n]=stringArray[n];      }    }    //IMAGE CODE HERE    b.pushMatrix();    b.translate(0-b.width, 0);    drawImageLayout (jsonData[i].layout, imageArray);    b.popMatrix();    drawImageLayoutFrames (jsonData[i].layout);    // b.fill (0,0,0);    // b.textSize(14);    // b.noStroke();    //  b.text("Use left/right arrow keys to select layout. LAYOUT ID = " + jsonData[i].layout, 100,20);  };  //==========================================================  //Image reference page  for (var i = 0; i < Math.floor(((pages+1)-assStartPage)/4); i++) {    b.page((i)*4+3+assStartPage);    drawSmallLayout(jsonData[i].layout);    //REFERENCE page    b.stroke(0,0,0);    b.fill(0,0,0);    assAspiration(jsonData[i].aspirationurl);  };};// function setup() {//   // parse JSON//   var jsonData = b.JSON.decode( jsonString );//   // run this on an empty document with only one page//   b.textFont('Arial', ['Italic'])//   b.textSize(24);//   b.text(jsonData.titles, 36,3, 576, 3);////   b.text(jsonData.address.city, 0,50, b.width, 50);//   b.text(jsonData.phoneNumber[0].number, 0,100, b.width, 50);////   // convert an object to a JSON-string//   b.println( b.JSON.encode(jsonData) );// }//FORMATTING--------------------------------------function bolding(tFrame, pNumber, wNumber){  var paraV = b.paragraphs(tFrame);  var wordsV = b.words(paraV[pNumber]);  b.typo(wordsV[wNumber], "fontStyle", "Bold");}function iBolding(tFrame, pNumber, wNumber){  var paraV = b.paragraphs(tFrame);  var wordsV = b.words(paraV[pNumber]);  b.typo(wordsV[wNumber], "fontStyle", "Bold Italic");}//CONTENT------------------------------------------function assTitle1(_titles, _x, _y){  b.textSize(24);  b.textAlign(Justification.RIGHT_ALIGN, VerticalJustification.CENTER_ALIGN);  titleFrame = b.text(_titles, _x,_y,576,27.6);  titleFrame.name = "title";}function assTitle2(_titles, _x, _y){  b.textSize(24);  b.textAlign(Justification.LEFT_ALIGN, VerticalJustification.CENTER_ALIGN);  titleFrame = b.text(_titles, _x,_y,576,27.6);  titleFrame.name = "title";}function assDescription(description){  b.textSize(12);  b.textAlign(Justification.LEFT_ALIGN, VerticalJustification.TOP_ALIGN);  desFrame = b.text(description, 36,68,550,16);  desFrame.name = "description";}function assBrief(_brief){  b.textSize(8);  b.textLeading(12);  b.textAlign(Justification.LEFT_ALIGN, VerticalJustification.TOP_ALIGN);  var brief = "Brief "+"\r"+_brief+"\n"+"\r";  bFrame =b.text(brief, 36,95,colWidth,260);  bolding(bFrame, 0, 0);  bFrame.name = "brief";}function assMeta(_level, _stemTags, _artTags, _learning){  b.textSize(7);  b.textLeading(9);  b.textAlign(Justification.LEFT_ALIGN, VerticalJustification.CENTER_ALIGN);  var meta = "Level: "+_level+"\r"+"STEM tags: "+_stemTags+"\r"+"Art tags: "+_artTags+"\r"+"Learning Objectives: Students will "+"\r"+_learning;  var learning = "Learning Objectives: Students will "+"\r"+_learning;  var metaFull = meta;  metaFrame =b.text(metaFull, 36,365,colWidth,102);  b.typo(metaFrame, "fontStyle", "Light Italic");  iBolding(metaFrame, 0, 0);  iBolding(metaFrame, 1, 0);  iBolding(metaFrame, 1, 1);  iBolding(metaFrame, 2, 0);  iBolding(metaFrame, 2, 1);  iBolding(metaFrame, 3, 0);  iBolding(metaFrame, 3, 1);  metaFrame.name = "meta";  b.typo(metaFrame,"leftIndent", 10);  b.typo(metaFrame,"rightIndent", 10);  //make a solid frame of 0.5 thickness  b.rectMode( b.CORNER ); // default  b.noFill();  b.stroke(0,0,0);  b.strokeWeight(1);  b.rect(36,365,colWidth,102);  b.fill(0,0,0);  b.stroke(0);}function assVariations(_variations){  b.textSize(8);  b.textLeading(12);  b.textAlign(Justification.LEFT_ALIGN, VerticalJustification.TOP_ALIGN);  var variation = "Variations"+"\r"+_variations+"\n"+"\r";  vFrame =b.text(variation, 36+colWidth+colSpacing,95,colWidth,373);  bolding(vFrame, 0, 0);}function assMeaningful(_meaningful){  b.textSize(8);  b.textLeading(12);  b.textAlign(Justification.LEFT_ALIGN, VerticalJustification.TOP_ALIGN);  var making = "Making it Meaningful"+"\r"+_meaningful;  makeFrame =b.text(making, 36+ colWidth*2+colSpacing*2,95,colWidth,373);  bolding(makeFrame, 0, 0);  bolding(makeFrame, 0, 1);  bolding(makeFrame, 0, 2);}function assAspiration(_aspiration){  b.textSize(8);  b.textLeading(12);  b.textAlign(Justification.LEFT_ALIGN, VerticalJustification.TOP_ALIGN);  var aspiration = "Aspirational Examples"+"\r"+_aspiration;  aspFrame =b.text(aspiration, 36,100,colWidth,367.5);  bolding(aspFrame, 0, 0);  bolding(aspFrame, 0, 1);}function objLength(obj){  var i=0;  for (var x in obj){    if(obj.hasOwnProperty(x)){      i++;    }  }  return i;}//IMAGE LAYOUT FUNCTIONS//==========================================================function drawImageLayoutFrames (whichImageLayout) {  var shrink = 1.0/8.0;  var delta = Ay;  var lineWeight = 1.0;  var numeralSize = 24;  /*if (bSmall){  lineWeight = 0.25;  numeralSize = 6;}*/var nImageLayouts = imageLayouts.length;if ((whichImageLayout >= 0) && (whichImageLayout < nImageLayouts)) {  var anImageLayout = imageLayouts[whichImageLayout];  var nRectsInLayout = anImageLayout.length;  for (var i = 0; i < nRectsInLayout; i++) {    var aRect = anImageLayout[i];    var rx = aRect[0];    var ry = aRect[1];    var rw = aRect[2];    var rh = aRect[3];    var numeralDx = 12;    var numeralDy = 36;    // if (bSmall){    //   // drawing the miniature version of the frames    //   rx = (rx - b.width - delta)*shrink;    //   ry = (ry - delta)*shrink;    //   rw = rw * shrink;    //   rh = rh * shrink;    //   numeralDx = 4;    //   numeralDy = 9;    // } else {    //   // drawing for the p5 preview only    //   rx -= b.width;    // }    drawRect (rx, ry, rw, rh, lineWeight);    drawNumeral (rx+numeralDx, ry+numeralDy, i+1, numeralSize);  }}}function drawRect(rx, ry, rw, rh, lineWeight){  // p5.js version:  b.noFill();  b.stroke(0, 0, 0);  b.strokeWeight (lineWeight);  b.rect(rx, ry, rw, rh);}function drawNumeral (nx, ny, num, numeralSize){  // p5.js version:  // b.fill(0,0,0);  // b.noStroke();  // b.textSize (numeralSize);  //b.text(num, nx,ny, 50,50);}//==========================================================function drawImageLayout (whichImageLayout, images) {  var nImageLayouts = imageLayouts.length;  if ((whichImageLayout >= 0) && (whichImageLayout < nImageLayouts)) {    var anImageLayout = imageLayouts[whichImageLayout];    var nRectsInLayout = anImageLayout.length;    nRectsInLayout = b.min(nRectsInLayout, 6);    for (var i = 0; i < nRectsInLayout; i++) {      var aRect = anImageLayout[i];      var rx = aRect[0];      var ry = aRect[1];      var rw = aRect[2];      var rh = aRect[3];      //bFrame =b.text(imageArray[i], 36,95,colWidth,260);      b.println(imageArray[i]);      b.image (String(imageArray[i]), rx, ry, rw, rh);    }  }}function drawSmallLayout(whichImageLayout){  var shrink = 1.0/8.0;  var delta = Ay;  var lineWeight = 1.0;  var numeralSize = 24;  var nImageLayouts = imageLayouts.length;  if ((whichImageLayout >= 0) && (whichImageLayout < nImageLayouts)) {    var anImageLayout = imageLayouts[whichImageLayout];    var nRectsInLayout = anImageLayout.length;    for (var i = 0; i < nRectsInLayout; i++) {      var aRect = anImageLayout[i];      var rx = aRect[0];      var ry = aRect[1];      var rw = aRect[2];      var rh = aRect[3];      var numeralDx = 12;      var numeralDy = 36;      var px=36;      var py = 36;      // drawing the miniature version of the frames      rx = (rx - b.width - delta)*shrink;      ry = (ry - delta)*shrink;      rw = rw * shrink;      rh = rh * shrink;      numeralDx = 4;      numeralDy = 9;      drawRect (rx+px, ry+py, rw, rh, lineWeight);      drawNumeral (rx+numeralDx+px, ry+numeralDy+py, i+1, numeralSize);    }  }}b.go();