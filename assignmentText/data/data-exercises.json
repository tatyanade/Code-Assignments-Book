[
    {
        "heading": "Exercises: Iteration",
        "exercisetitle": "Checkers",
        "descriptions": "Create a checker board using a nested loop. Remember a checker board is a 8 x 8 grid of alternating black and white squares, starting with white in the top left corner. ",
        "imagename": "exercises/iteration/checkers.jpg",
        "verticalspace": 1
    },
    {
        "heading": "Exercises: Iteration",
        "exercisetitle": "A Mini-Calendar",
        "descriptions": "Use a for() loop to generate a row of 31 visual elements; these will represent the current months. All of the elements should be drawn identically — except for the one whose index corresponds to the current day. Differentiate this one in some way.",
        "imagename": "exercises/iteration/calendar.jpg",
        "verticalspace": 1
    },
    {
        "heading": "Exercises: Iteration",
        "exercisetitle": "A Receding Horizon",
        "descriptions": "Use iteration to create a series of vertical lines across the screen. Modify the values within the iteration loop to shift the lines so that they have the appearance of a receding horizon.",
        "imagename": "exercises/iteration/horizon.jpg",
        "verticalspace": 1
    },
    {
        "heading": "Exercises: Iteration",
        "exercisetitle": "Color Gradient I",
        "descriptions": "Using a series of vertical lines, create a gradient from one color to another. Learn about: map(), lerp().",
        "imagename": "exercises/iteration/gradient.jpg",
        "verticalspace": 1
    },
    {
        "heading": "Exercises: Iteration",
        "exercisetitle": "Color Gradient II",
        "descriptions": "Generate a gradient interpolating from one color to another across 17 rectangles. Use a for() loop to calculate the sizes, positions and fill-colors of the rectangles. Implement some code that randomizes the two colors whenever the user clicks the mouse. ",
        "imagename": "exercises/iteration/gradient2.jpg",
        "verticalspace": 1
    },
    {
        "heading": "Exercises: Iteration",
        "exercisetitle": "Geometric Progression I",
        "descriptions": "Use a for() loop to visualize a geometric progression. Some aspect of each element in the progression should come from series of numbers where each term after the first is computed by multiplying the previous one by a fixed multiplier (or common ratio).",
        "imagename": "exercises/iteration/progression.jpg",
        "verticalspace": 1
    },
    {
        "heading": "Exercises: Iteration",
        "exercisetitle": "Geometric Progression II",
        "descriptions": "Layout your graphic elements in two dimensions, and vary them both along the x- and y-axis. For example, change their shape and/or colour progressively.",
        "imagename": "exercises/iteration/progression2.jpg",
        "verticalspace": 1
    },
    {
        "heading": "Exercises: Iteration",
        "exercisetitle": "Iteration with functions",
        "descriptions": "Write a function which encapsulates several drawing commands in order to render a simple element (a leaf, a face etc.). Give your function two arguments that determine where the element will be positioned. Using iteration, call your function to display a grid of these elements.",
        "imagename": "exercises/iteration/iterWithFuns/interactionWithFunctions.png",
        "verticalspace": 1
    },
    {
        "heading": "Exercises: Color",
        "exercisetitle": "Basic Color",
        "descriptions": "Overlap some semi-transparent shapes to create at least seven different colors onscreen. Draw the shapes without outlines. Experiment with the different pixel transfer or blend modes.",
        "imagename": "exercises/color/overlap.png",
        "verticalspace": 1
    },
    {
        "heading": "Exercises: Color",
        "exercisetitle": "Color and Iteration",
        "descriptions": "Create a gradient from one color to another using iteration.",
        "imagename": "exercises/color/twoColorGradient.png",
        "verticalspace": 1
    },
    {
        "heading": "Exercises: Color",
        "exercisetitle": "Color and Perception",
        "descriptions": "Create a composition showing the smallest interval between colors distinguishable by the human eye. \r",
        "imagename": "exercises/color/perception.png",
        "verticalspace": 1
    },
    {
        "heading": "Exercises: Color",
        "exercisetitle": "Every Color",
        "descriptions": "Using the HSB color model, create a program where every hue is displayed on the screen.",
        "imagename": "exercises/color/HSBgradient.png",
        "verticalspace": 1
    },
    {
        "heading": "Exercises: Color",
        "exercisetitle": "Every Color Animated",
        "descriptions": "Create a sketch that displays every possible color over time. Choose either the RGB or HSB color models.",
        "imagename": "exercises/color/everyColor.png",
        "verticalspace": 1
    },
    {
        "heading": "Exercises: Color",
        "exercisetitle": "Interactive Color I",
        "descriptions": "Create an interaction in which the cursor position controls the color of the canvas. Use this to illustrate the use of different color models (RGB, HSB).",
        "imagename": "exercises/color/mouseColor.png",
        "verticalspace": 1
    },
    {
        "heading": "Exercises: Color",
        "exercisetitle": "Interactive Color II",
        "descriptions": "Split the canvas into two equal-sized rectangles, side-by-side. Create an interaction such that one rectangle’s color is controlled by the cursor position, and the other contains its complement.\n",
        "imagename": "exercises/color/complement.png",
        "verticalspace": 1
    },
    {
        "heading": "Exercises: Color",
        "exercisetitle": "Color Breakdown",
        "descriptions": "Display an image so that it fully covers the display window. Draw three ellipses to the screen and fill each ellipse with the R value, the G value and the B value respectively for each pixel of the image under the mouse.",
        "imagename": "exercises/color/colorpicker.png",
        "verticalspace": 1
    },
    {
        "heading": "Exercises: Drawing",
        "exercisetitle": "Draw you Initials",
        "descriptions": "Draw your initials with primative shapes and lines. ",
        "imagename": "exercises/drawing/initials.png",
        "verticalspace": 1
    },
    {
        "heading": "Exercises: Drawing",
        "exercisetitle": "Coding Mondrian",
        "descriptions": "Convert a Mondrian painting into code. This is an exercise in observation, pay attention to detail.",
        "imagename": "exercises/drawing/mondrian.png",
        "verticalspace": 2
    },
    {
        "heading": "Exercises: Drawing",
        "exercisetitle": "Coding Stadia II",
        "descriptions": "Select a crop of Julie Mehretu’s Stadia II. Load a large version of the image into a program like Photoshop or Illustrator. Read the color and coordinate data and recreate a crop with shapes, lines, curves and custom shape functinons. Try to do this as faithfully as possible. A variation of this is to divide the work into sections and allocate these to individual students. Recombine the crops in the following class.",
        "imagename": "exercises/drawing/stadia.png",
        "verticalspace": 1
    },
    {
        "heading": "Exercises: Drawing",
        "exercisetitle": "Recoding Schotter",
        "descriptions": "Schotter is a computational artwork from the 1960s made by Georg Nees. Recode this work paying attention to detail.",
        "imagename": "exercises/drawing/schotter.png",
        "verticalspace": 1
    },
    {
        "heading": "Exercises: Drawing",
        "exercisetitle": "Draw, then Code",
        "descriptions": "Spend at least 30 minutes drawing a scene, a still life, a portrait or a design using pen or pencil on paper. Take care to create this image with adequate care and detail. Take your drawing and reinterpret it in code.",
        "imagename": "exercises/drawing/kyla.png",
        "verticalspace": 1
    },
    {
        "heading": "Exercises: Drawing",
        "exercisetitle": "Drawing with the Mouse I",
        "descriptions": "Create a sketch that draws a line along the path of the mouse. ",
        "imagename": "exercises/drawing/draw_mouse.png",
        "verticalspace": 1
    },
    {
        "heading": "Exercises: Drawing",
        "exercisetitle": "Drawing with the Mouse II",
        "descriptions": "Modify your sketch so that the thickness of the line is relative to the speed of the mouse.",
        "imagename": "exercises/drawing/draw_mouse2.png",
        "verticalspace": 1
    },
    {
        "heading": "Exercises: Drawing",
        "exercisetitle": "Drawing with the Mouse III",
        "descriptions": "Create a sketch that draws a line using the past 100 mouse positions. Replace your line with transparent ellipses.",
        "imagename": "exercises/drawing/draw_mouse3.png",
        "verticalspace": 1
    },
    {
        "heading": "Exercises: Drawing",
        "exercisetitle": "Living line",
        "descriptions": "Create a living line from using the past 100 mouse positions and by adding some randomness to each point. Increase the randomness as the mouse positions get older. ",
        "imagename": "exercises/drawing/draw_mouse4.png",
        "verticalspace": 1
    }
]
